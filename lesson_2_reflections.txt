What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

How can you use the staging area to make sure you have one commit per logical change?


What are some situations when branches would be helpful in keeping your history organized? How would branches help?


How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Describe the differences between forks, clones, and branches. When would you use one instead of another?

What is the benefit of having a copy of the last known state of the remote stored locally?

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?